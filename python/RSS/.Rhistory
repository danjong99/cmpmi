library(reshape2)
scaled_drop_matrix_melt <- melt(scaled_drop_matrix)
head(scaled_drop_matrix_melt)
colnames(scaled_drop_matrix_melt) <- c("Genes","Cells","Expression")
b <- head(scaled_drop_matrix_melt, 100)
View(b)
dim(scaled_drop_matrix_melt)
nrow(scaled_drop_matrix_melt)/unique(scaled_drop_matrix_melt$Cells)
nrow(scaled_drop_matrix_melt)/length(unique(scaled_drop_matrix_melt$Cells))
b <- head(scaled_drop_matrix_melt, 20000)
b$CellType <- sapply(b$Cells,function(x){cellLabels[x,]$CellType})
View(b)
scaled_drop_matrix_melt$CellType <- sapply(scaled_drop_matrix_melt$Cells,function(x){cellLabels[x,]$CellType})
Exr <- readRDS("~/Desktop/10XResults/GF1_WT2_MergedRCC/GF1WT2/WT_GF_Combined_Seurat.rds")
Exr@hvg.info
head(Exr@hvg.info)
head(Exr@spatial)
head(Exr@snn)
head(Exr@dr$tsne@cell.embeddings)
tsne_embed <- Exr@dr$tsne@cell.embeddings
View(tsne_embed)
tsne_embed$cellID <- rownames(tsne_embed)
View(tsne_embed)
tsne_embed
head(tsne_embed)
tsne_embed$cellID <- rownames(tsne_embed)
tsne_embed <- Exr@dr$tsne@cell.embeddings
View(tsne_embed)
class(tsne_embed)
tsne_embed <- as.data.frame(tsne_embed)
tsne_embed$cellID <- rownames(tsne_embed)
gsub("GF_","",tsne_embed$cellID)
tsne_embed$cellID <- gsub("GF_","",tsne_embed$cellID)
tsne_embed$cellID <- gsub("WT_","",tsne_embed$cellID)
head(tsne_embed)
write.table(tsne_embed, file = "tsne_embedding.txt", sep = '\t')
setwd("~/Desktop/10XResults/GF1_WT2_MergedRCC/SCENIC_R/Avg20_All/No4")
write.table(tsne_embed, file = "tsne_embedding.txt", sep = '\t')
Exr <- readRDS("~/Desktop/10XResults/GF1_WT2_MergedRCC/GF1WT2/WT_GF_Combined_Seurat.rds")
library(Seurat)
library(dplyr)
library(monocle)
library(DESeq2)
set.seed(01234)
setwd("~/Desktop/10XResults/GF1_WT2_MergedRCC/SCENIC_R/Avg20_All/No4")
auc_mtx_no4 <- read.delim("~/Desktop/10XResults/GF1_WT2_MergedRCC/SCENIC_R/Avg20_All/No4/auc_mtx_no4.txt")
View(auc_mtx_no4)
auc_mtx <- auc_mtx_no4
rm(auc_mtx_no4)
colnames(auc_mtx)
rownames(auc_mtx)
ncol(auc_mtx)
auc_mtx
scenicOptions <- readRDS("~/Desktop/10XResults/GF1_WT2_MergedRCC/SCENIC_R/Avg20_All/No4/int/scenicOptions.Rds")
library(SCENIC)
aucell_regulonAUC <- loadInt(scenicOptions, "aucell_regulonAUC")
library(AUCell)
auc_mtx <- getAUC(aucell_regulonAUC)
View(auc_mtx)
cell_index <- Exr@meta.data
cell_index$res.1 <- NULL
cell_index$cellTrack <- rownames(cell_index)
cell_index$cellTrack <- gsub("WT_","",cell_index$cellTrack)
cell_index$cellTrack <- gsub("GF_","",cell_index$cellTrack)
sum(duplicated(cell_index$cellTrack))
sum(duplicated(intersect(colnames(auc_mtx), cell_index$cellTrack)))
cell_index[cell_index$cellTrack == colnames(auc_mtx)[1],]
a <- list()
for (i in 1:length(colnames(auc_mtx))) {
a[i] <- grep(colnames(auc_mtx)[i], cell_index$cellTrack)
}
View(a)
avg20_Exr <- SubsetData(object = Exr, cells.use = rownames(cell_index[unlist(a),]))
TSNEPlot(avg20_Exr, do.label = TRUE, label.size = 7, pt.size = 5)
avg20_Exr <- SetAssayData(avg20_Exr, assay.type = "AUC", slot = "raw.data", new.data = auc_mtx)
cell_index[unlist(a),]
cell_index[unlist(a),]$cellTrack
identical(cell_index[unlist(a),]$cellTrack, colnames(auc_mtx))
colnames(auc_mtx) <- rownames(cell_index[unlist(a),])
View(auc_mtx)
avg20_Exr <- SetAssayData(avg20_Exr, assay.type = "AUC", slot = "raw.data", new.data = auc_mtx)
avg20_Exr <- NormalizeData(avg20_Exr, assay.type = "AUC",
normalization.method = "LogNormalize", scale.factor = 1000)
avg20_Exr <- ScaleData(avg20_Exr, assay.type = "AUC", display.progress = TRUE)
avg20_Exr_mac <- SubsetData(object = avg20_Exr, ident.use = c("1","2","3","4","6","7","11"))
Tfs <- c(rownames(c_auc_mtx[grep("Atf3",rownames(auc_mtx)),])[1],
rownames(c_auc_mtx[grep("Atf4",rownames(auc_mtx)),])[1],
rownames(c_auc_mtx[grep("Fos",rownames(auc_mtx)),])[2],
rownames(c_auc_mtx[grep("Jun",rownames(auc_mtx)),])[4],
rownames(c_auc_mtx[grep("Fosb",rownames(auc_mtx)),])[1],
rownames(c_auc_mtx[grep("Crem",rownames(auc_mtx)),])[1],
rownames(c_auc_mtx[grep("Spic",rownames(auc_mtx)),])[1],
rownames(c_auc_mtx[grep("Chd2",rownames(auc_mtx)),])[1],
rownames(c_auc_mtx[grep("Cebpb",rownames(auc_mtx)),])[1],
rownames(c_auc_mtx[grep("Klf9",rownames(auc_mtx)),])[1],
rownames(c_auc_mtx[grep("Egr1",rownames(auc_mtx)),])[1],
rownames(c_auc_mtx[grep("Egr2",rownames(auc_mtx)),])[1])
Tfs <- c(rownames(auc_mtx[grep("Atf3",rownames(auc_mtx)),])[1],
rownames(auc_mtx[grep("Atf4",rownames(auc_mtx)),])[1],
rownames(auc_mtx[grep("Fos",rownames(auc_mtx)),])[2],
rownames(auc_mtx[grep("Jun",rownames(auc_mtx)),])[4],
rownames(auc_mtx[grep("Fosb",rownames(auc_mtx)),])[1],
rownames(auc_mtx[grep("Crem",rownames(auc_mtx)),])[1],
rownames(auc_mtx[grep("Spic",rownames(auc_mtx)),])[1],
rownames(auc_mtx[grep("Chd2",rownames(auc_mtx)),])[1],
rownames(auc_mtx[grep("Cebpb",rownames(auc_mtx)),])[1],
rownames(auc_mtx[grep("Klf9",rownames(auc_mtx)),])[1],
rownames(auc_mtx[grep("Egr1",rownames(auc_mtx)),])[1],
rownames(auc_mtx[grep("Egr2",rownames(auc_mtx)),])[1])
VlnPlot(object = avg20_Exr_mac, features.plot = Tfs)
tf <- rownames(auc_mtx[grep("Fosl1",rownames(auc_mtx)),])[1]
VlnPlot(object = avg20_Exr_mac, features.plot = tf)
VlnPlot(object = avg20_Exr_mac, features.plot = "Fosl1")
tf
tf <- rownames(auc_mtx[grep("Fos",rownames(auc_mtx)),])[1]
tf
VlnPlot(object = avg20_Exr_mac, features.plot = tf)
tf <- c(rownames(auc_mtx[grep("Fos",rownames(auc_mtx)),])[1],
rownames(auc_mtx[grep("Mafk",rownames(auc_mtx)),])[1],
rownames(auc_mtx[grep("Etv1",rownames(auc_mtx)),])[1])
tf
rownames(auc_mtx[grep("Mafk",rownames(auc_mtx)),])[1]
rownames(auc_mtx[grep("Etv1",rownames(auc_mtx)),])[1]
rownames(auc_mtx[grep("Etv1",rownames(auc_mtx)),])
tf <- c(rownames(auc_mtx[grep("Fos",rownames(auc_mtx)),])[1],
rownames(auc_mtx[grep("Maf",rownames(auc_mtx)),])[1],
rownames(auc_mtx[grep("Etv",rownames(auc_mtx)),])[1])
tf
rownames(auc_mtx)
a <- rownames(auc_mtx)
gsub("_extended","",a)
a <- gsub("_extended","",a)
rownames(auc_mtx) <- a
View(auc_mtx)
avg20_Exr <- SubsetData(object = Exr, cells.use = rownames(cell_index[unlist(a),]))
TSNEPlot(avg20_Exr, do.label = TRUE, label.size = 7, pt.size = 5)
rm(avg20_Exr)
rm(avg20_Exr_mac)
avg20_Exr <- SubsetData(object = Exr, cells.use = rownames(cell_index[unlist(a),]))
TSNEPlot(avg20_Exr, do.label = TRUE, label.size = 7, pt.size = 5)
cell_index[unlist(a),]
a <- list()
for (i in 1:length(colnames(auc_mtx))) {
a[i] <- grep(colnames(auc_mtx)[i], cell_index$cellTrack)
}
avg20_Exr <- SubsetData(object = Exr, cells.use = colnames(auc_mtx))
TSNEPlot(avg20_Exr, do.label = TRUE, label.size = 7, pt.size = 5)
avg20_Exr <- SetAssayData(avg20_Exr, assay.type = "AUC", slot = "raw.data", new.data = auc_mtx)
avg20_Exr <- NormalizeData(avg20_Exr, assay.type = "AUC",
normalization.method = "LogNormalize", scale.factor = 1000)
avg20_Exr <- ScaleData(avg20_Exr, assay.type = "AUC", display.progress = TRUE)
avg20_Exr_mac <- SubsetData(object = avg20_Exr, ident.use = c("1","2","3","4","6","7","11"))
rownames(auc_mtx[grep("Fos",rownames(auc_mtx)),])
tf <- c(rownames(auc_mtx[grep("Fos",rownames(auc_mtx)),])[5],
rownames(auc_mtx[grep("Maf",rownames(auc_mtx)),])[1],
rownames(auc_mtx[grep("Etv",rownames(auc_mtx)),])[1])
VlnPlot(object = avg20_Exr_mac, features.plot = tf)
rownames(auc_mtx[grep("Etv",rownames(auc_mtx)),])
rownames(auc_mtx[grep("Mafk",rownames(auc_mtx)),])
rownames(auc_mtx[grep("Maf",rownames(auc_mtx)),])
grep("Maf",rownames(auc_mtx))
rownames(auc_mtx)
grep("Maf",rownames(auc_mtx))
rownames(auc_mtx[grep("Maf",rownames(auc_mtx)),])
grep("Maf", rownames(auc_mtx))
grep("maf", rownames(auc_mtx))
grep("Mafk", rownames(auc_mtx))
auc_mtx[grep("Mafk", rownames(auc_mtx)),]
rownames(auc_mtx[grep("Mafk", rownames(auc_mtx)),])
rownames(auc_mtx)
rownames(auc_mtx)[137,]
rownames(auc_mtx)['137',]
rownames(auc_mtx)[c(
),]
rownames(auc_mtx)[c("137"),]
rownames(auc_mtx)[1:2,]
rownames(auc_mtx)[1:2]
rownames(auc_mtx)[137]
rownames(auc_mtx[grep("Maf",rownames(auc_mtx)),])
rownames(auc_mtx[grep("Maf",rownames(auc_mtx)),])
class(auc_mtx)
auc_mtx <- as.data.frame(auc_mtx)
rownames(auc_mtx[grep("Maf",rownames(auc_mtx)),])
tf <- c(rownames(auc_mtx[grep("Fos",rownames(auc_mtx)),])[5],
rownames(auc_mtx[grep("Maf",rownames(auc_mtx)),]),
rownames(auc_mtx[grep("Etv",rownames(auc_mtx)),])[1])
VlnPlot(object = avg20_Exr_mac, features.plot = tf)
rownames(auc_mtx[grep("Etv",rownames(auc_mtx)),])
tf <- c(rownames(auc_mtx[grep("Fos",rownames(auc_mtx)),])[5],
rownames(auc_mtx[grep("Maf",rownames(auc_mtx)),]),
rownames(auc_mtx[grep("Etv",rownames(auc_mtx)),])[6])
VlnPlot(object = avg20_Exr_mac, features.plot = tf)
library(SCENIC)
library(SingleCellExperiment)
library(dplyr)
regulonTargetsInfo <- loadInt(scenicOptions, "regulonTargetsInfo")
View(regulonTargetsInfo)
##Regulons and Targets Particularly strong in Cluster 6
Fosl1TargetsInfo <- regulonTargetsInfo[regulonTargetsInfo$TF == "Fosl1",]
View(Fosl1TargetsInfo)
Fosl1TargetsInfo <- Fosl1TargetsInfo[!is.na(Fosl1TargetsInfo$Genie3Weight),]
Fosl1Target0.9 <- Fosl1TargetsInfo %>%
filter(Genie3Weight > 0.01)
View(Fosl1Target0.9)
View(Fosl1TargetsInfo)
View(Fosl1TargetsInfo)
Fosl1Target0.9 <- Fosl1TargetsInfo %>%
filter(highConfAnnot == TRUE, Genie3Weight > 0.001)
View(Fosl1Target0.9)
tf <- c(rownames(auc_mtx[grep("Fosl1",rownames(auc_mtx)),])[1],
rownames(auc_mtx[grep("Maff",rownames(auc_mtx)),])[1],
rownames(auc_mtx[grep("Etv1",rownames(auc_mtx)),])[1],
rownames(auc_mtx[grep("Klf5",rownames(auc_mtx)),])[1],
rownames(auc_mtx[grep("Sp5",rownames(auc_mtx)),])[1])
tf
tf <- c(rownames(auc_mtx[grep("Fosl1",rownames(auc_mtx)),])[1],
rownames(auc_mtx[grep("Mafk",rownames(auc_mtx)),])[1],
rownames(auc_mtx[grep("Etv1",rownames(auc_mtx)),])[1],
rownames(auc_mtx[grep("Klf5",rownames(auc_mtx)),])[1],
rownames(auc_mtx[grep("Sp4",rownames(auc_mtx)),])[1])
tf
VlnPlot(object = avg20_Exr_mac, features.plot = tf)
Etv1TargetsInfo <- regulonTargetsInfo[regulonTargetsInfo$TF == "Etv1",]
Etv1TargetsInfo <- Etv1TargetsInfo[!is.na(Etv1TargetsInfo$Genie3Weight),]
Etv1Target0.9 <- Etv1TargetsInfo %>%
filter(Genie3Weight > 0.01)
Etv1TargetsInfo <- regulonTargetsInfo[regulonTargetsInfo$TF == "Etv1",]
Etv1TargetsInfo <- Etv1TargetsInfo[!is.na(Etv1TargetsInfo$Genie3Weight),]
Etv1Target0.9 <- Etv1TargetsInfo %>%
filter(highConfAnnot == TRUE, Genie3Weight > 0.001)
Etv1Target0.9 <- Etv1TargetsInfo %>%
filter(Genie3Weight > 0.001)
Etv1Target0.9 <- Etv1TargetsInfo %>%
filter(Genie3Weight > 0.005)
View(Etv1Target0.9)
Etv1Target0.9 <- Etv1TargetsInfo %>%
filter(Genie3Weight > 0.003)
View(Etv1Target0.9)
Etv1Target0.9 <- Etv1TargetsInfo %>%
filter(Genie3Weight > 0.002)
View(Etv1Target0.9)
mafkTargetsInfo <- regulonTargetsInfo[regulonTargetsInfo$TF == "Mafk",]
mafkTargetsInfo <- mafkTargetsInfo[!is.na(mafkTargetsInfo$Genie3Weight),]
mafkTarget0.9 <- mafkTargetsInfo %>%
filter(Genie3Weight > 0.01)
mafkTarget0.9 <- mafkTargetsInfo %>%
filter(Genie3Weight > 0.005)
View(mafkTarget0.9)
mafkTarget0.9 <- mafkTargetsInfo %>%
filter(highConfAnnot == TRUE)
View(mafkTarget0.9)
Fosl1Target0.9$gene
id1 <- bitr(Fosl1Target0.9$gene, fromType="SYMBOL", toType=c("ENSEMBL", "ENTREZID"), OrgDb="org.Mm.eg.db")
library(clusterProfiler)
library(org.Mm.eg.db)
keytypes(org.Mm.eg.db)
library(GOSemSim)
library(DOSE)
id1 <- bitr(Fosl1Target0.9$gene, fromType="SYMBOL", toType=c("ENSEMBL", "ENTREZID"), OrgDb="org.Mm.eg.db")
View(id1)
fosl1_go <- enrichGO(gene = id1$ENTREZID,
OrgDb         = org.Mm.eg.db,
keyType       = 'ENTREZID',
ont           = "BP",
pAdjustMethod = "BH",
pvalueCutoff  = 0.01,
qvalueCutoff  = 0.05,
readable = TRUE)
Klf5TargetsInfo <- regulonTargetsInfo[regulonTargetsInfo$TF == "Klf5",]
Klf5TargetsInfo <- Klf5TargetsInfo[!is.na(Klf5TargetsInfo$Genie3Weight),]
View(Klf5TargetsInfo)
Klf5Target0.9 <- Klf5TargetsInfo %>%
filter(Genie3Weight > 0.01)
View(Klf5Target0.9)
Klf5Target0.9 <- Klf5TargetsInfo %>%
filter(Genie3Weight > 0.005)
View(Klf5Target0.9)
Klf5Target0.9 <- Klf5TargetsInfo %>%
filter(Genie3Weight > 0.003)
View(Klf5Target0.9)
Etv1Target0.9 <- Etv1TargetsInfo %>%
filter(Genie3Weight > 0.003)
dotplot(fosl1_go)
fosl1_go@result
head(fosl1_go@result)
id1 <- bitr(Etv1Target0.9$gene, fromType="SYMBOL", toType=c("ENSEMBL", "ENTREZID"), OrgDb="org.Mm.eg.db")
etv1_go <- enrichGO(gene = id1$ENTREZID,
OrgDb         = org.Mm.eg.db,
keyType       = 'ENTREZID',
ont           = "BP",
pAdjustMethod = "BH",
pvalueCutoff  = 0.01,
qvalueCutoff  = 0.05,
readable = TRUE)
mafkTargetsInfo <- regulonTargetsInfo[regulonTargetsInfo$TF == "Mafk",]
mafkTargetsInfo <- mafkTargetsInfo[!is.na(mafkTargetsInfo$Genie3Weight),]
mafkTarget0.9 <- mafkTargetsInfo %>%
filter(highConfAnnot == TRUE)
id1 <- bitr(mafkTarget0.9$gene, fromType="SYMBOL", toType=c("ENSEMBL", "ENTREZID"), OrgDb="org.Mm.eg.db")
mafk_go <- enrichGO(gene = id1$ENTREZID,
OrgDb         = org.Mm.eg.db,
keyType       = 'ENTREZID',
ont           = "BP",
pAdjustMethod = "BH",
pvalueCutoff  = 0.01,
qvalueCutoff  = 0.05,
readable = TRUE)
etv1_go@result
head(etv1_go@result)
head(mafk_go@result)
Klf5Target0.9$gene
id1 <- bitr(Klf5Target0.9$gene, fromType="SYMBOL", toType=c("ENSEMBL", "ENTREZID"), OrgDb="org.Mm.eg.db")
Klf5_go <- enrichGO(gene = id1$ENTREZID,
OrgDb         = org.Mm.eg.db,
keyType       = 'ENTREZID',
ont           = "BP",
pAdjustMethod = "BH",
pvalueCutoff  = 0.01,
qvalueCutoff  = 0.05,
readable = TRUE)
head(Klf5_go@result)
Klf5Target0.9 <- Klf5TargetsInfo %>%
filter(Genie3Weight > 0.001)
id1 <- bitr(Klf5Target0.9$gene, fromType="SYMBOL", toType=c("ENSEMBL", "ENTREZID"), OrgDb="org.Mm.eg.db")
Klf5_go <- enrichGO(gene = id1$ENTREZID,
OrgDb         = org.Mm.eg.db,
keyType       = 'ENTREZID',
ont           = "BP",
pAdjustMethod = "BH",
pvalueCutoff  = 0.01,
qvalueCutoff  = 0.05,
readable = TRUE)
Sp4TargetsInfo <- regulonTargetsInfo[regulonTargetsInfo$TF == "Sp4",]
Sp4TargetsInfo <- Sp4TargetsInfo[!is.na(Sp4TargetsInfo$Genie3Weight),]
Sp4Target0.9 <- Sp4TargetsInfo %>%
filter(Genie3Weight > 0.001)
id1 <- bitr(Target0.9$gene, fromType="SYMBOL", toType=c("ENSEMBL", "ENTREZID"), OrgDb="org.Mm.eg.db")
id1 <- bitr(Sp4Target0.9$gene, fromType="SYMBOL", toType=c("ENSEMBL", "ENTREZID"), OrgDb="org.Mm.eg.db")
View(id1)
Sp4_go <- enrichGO(gene = id1$ENTREZID,
OrgDb         = org.Mm.eg.db,
keyType       = 'ENTREZID',
ont           = "BP",
pAdjustMethod = "BH",
pvalueCutoff  = 0.01,
qvalueCutoff  = 0.05,
readable = TRUE)
tf <- c(rownames(auc_mtx[grep("Fosl1",rownames(auc_mtx)),])[1],
rownames(auc_mtx[grep("Mafk",rownames(auc_mtx)),])[1],
rownames(auc_mtx[grep("Etv1",rownames(auc_mtx)),])[1],
rownames(auc_mtx[grep("Klf5",rownames(auc_mtx)),])[1],
rownames(auc_mtx[grep("Sp4",rownames(auc_mtx)),])[1],
rownames(auc_mtx[grep("Rarg",rownames(auc_mtx)),])[1],
rownames(auc_mtx[grep("Usf2",rownames(auc_mtx)),])[1],
rownames(auc_mtx[grep("Jund",rownames(auc_mtx)),])[1])
tf
tf <- c(rownames(auc_mtx[grep("Fosl1",rownames(auc_mtx)),])[1],
rownames(auc_mtx[grep("Mafk",rownames(auc_mtx)),])[1],
rownames(auc_mtx[grep("Etv1",rownames(auc_mtx)),])[1],
rownames(auc_mtx[grep("Klf5",rownames(auc_mtx)),])[1],
rownames(auc_mtx[grep("Sp4",rownames(auc_mtx)),])[1],
rownames(auc_mtx[grep("Rarg",rownames(auc_mtx)),])[1],
rownames(auc_mtx[grep("Usf2",rownames(auc_mtx)),])[1],
rownames(auc_mtx[grep("Jund",rownames(auc_mtx)),])[2])
tf
VlnPlot(object = avg20_Exr_mac, features.plot = tf)
C6_specific_TargetsInfo <- regulonTargetsInfo[regulonTargetsInfo$TF == "Fosl1" |
regulonTargetsInfo$TF == "Mafk" |
regulonTargetsInfo$TF == "Etv1" |
regulonTargetsInfo$TF == "Klf5" |
regulonTargetsInfo$TF == "Jund",]
View(C6_specific_TargetsInfo)
C6_specific_TargetsInfo <- C6_specific_TargetsInfo[!is.na(C6_specific_TargetsInfo$Genie3Weight),]
C6_specific_Target0.9 <- C6_specific_TargetsInfo %>%
filter(highConfAnnot == TRUE)
View(C6_specific_Target0.9)
View(C6_specific_Target0.9)
id1 <- bitr(C6_specific_Target0.9$gene, fromType="SYMBOL", toType=c("ENSEMBL", "ENTREZID"), OrgDb="org.Mm.eg.db")
C6_go <- enrichGO(gene = id1$ENTREZID,
OrgDb         = org.Mm.eg.db,
keyType       = 'ENTREZID',
ont           = "BP",
pAdjustMethod = "BH",
pvalueCutoff  = 0.01,
qvalueCutoff  = 0.05,
readable = TRUE)
head(C6_go@result)
View(regulonTargetsInfo)
?unname
col3 <- 750+ 100*rt(1500, df = 3)
breaks <- factor(cut(col3, breaks = 360+5*(0:155)))
z <- table(breaks)
z[1:5] # The names are larger than the data ...
barplot(unname(z), axes = FALSE)
z
unname
unname(z)
setwd("~/Desktop/10XResults/GF1_WT2_MergedRCC/SCENIC_R/Avg20_All/No4/source")
## read auc matrix
avg20_1 <- read.table("auc_mtx_no4.txt", header=T, row.names=1)
View(avg20_1)
library(magrittr)
# temp <- avg20_1[1:5,1:6]
regulon_1 <- rownames(avg20_1)
## get cell barcode information
cell_1 <- colnames(avg20_1)
cellInfo <- readRDS("~/Desktop/10XResults/GF1_WT2_MergedRCC/SCENIC_R/Avg20_All/No4/int/cellInfo.Rds")
head(cellinfo)
cellinfo <- cellInfo
head(cellinfo)
cellinfo %>% dplyr::group_by(CellType) %>% dplyr::count()
head(cellinfo)
setwd("~/Desktop/10XResults/GF1_WT2_MergedRCC/SCENIC_R/Avg20_All/No4/RSS")
for(i in 0:12){
barcode <- cellinfo %>% dplyr::filter(CellType==i) %>% dplyr::select(CellID) %>% as.matrix() %>% as.vector()
write.table(barcode, file=paste("barcodes_cluster_",i,".txt",sep = ""), row.names =F, col.names = F, quote = F)
}
head(cellinfo)
cellInfo <- read.delim("~/Desktop/cellInfo.txt")
View(cellInfo)
cellinfo <- cellInfo
head(cellinfo)
cellinfo %>% dplyr::group_by(CellType) %>% dplyr::count()
for(i in 0:12){
barcode <- cellinfo %>% dplyr::filter(CellType==i) %>% dplyr::select(CellID) %>% as.matrix() %>% as.vector()
write.table(barcode, file=paste("barcodes_cluster_",i,".txt",sep = ""), row.names =F, col.names = F, quote = F)
}
sorted_colnames2 <- cellinfo %>% dplyr::arrange(CellType) %>% dplyr::select(CellID) %>% as.matrix() %>% as.vector()
names(sorted_colnames2) <- cellinfo %>% dplyr::arrange(CellType) %>% dplyr::select(CellType) %>% as.matrix() %>% as.vector()
temp <- sorted_colnames2[sorted_colnames2 %in% sorted_colnames]
sorted_colnames <- c()
for(i in 0:12) {
cluster <- cellinfo %>% dplyr::filter(CellType==i) %>% dplyr::select(CellID) %>% as.matrix() %>% as.vector()
sorted_colnames <- c(sorted_colnames, intersect(colnames(avg20_1), cluster))
}
temp <- sorted_colnames2[sorted_colnames2 %in% sorted_colnames]
names(temp)
temp
avg20_1_sorted <- avg20_1[,sorted_colnames]
names(temp)
colnames(avg20_1_sorted) <- names(temp)
write.table(t_a,"average_auc_rep4.txt", quote = F, sep = "\t")
avg20_1_sorted <- avg20_1[,sorted_colnames]
colnames(avg20_1_sorted) <- names(temp)
# t(avg20_1_sorted)[1:5,1:5]
t_avg20_1_sorted <- as.data.frame(t(avg20_1_sorted)) %>% tibble::rownames_to_column("cluster")
a <- t_avg20_1_sorted %>% dplyr::group_by(cluster) %>% dplyr::summarise_all(mean)
t_a <- a %>% tibble::column_to_rownames("cluster") %>% t()
t_a
t_avg20_1_sorted
a
sorted_colnames
avg20_1_sorted <- avg20_1[,sorted_colnames]
colnames(avg20_1_sorted)
colnames(avg20_1_sorted) <- names(temp)
colnames(avg20_1_sorted)
avg20_1_sorted_Mat <- as.matrix(avg20_1_sorted)
View(avg20_1_sorted_Mat)
rowSums(avg20_1_sorted_Mat)
## calculate Pr
Pr <- avg20_1_sorted_Mat / rowSums(avg20_1_sorted_Mat)
View(Pr)
## calculate Pc
nCell <- sort(unname(table(colnames(avg20_1_sorted_Mat))),decreasing = T)
nCell
colnames(avg20_1_sorted_Mat)
table(colnames(avg20_1_sorted_Mat))
sort(unname(table(colnames(avg20_1_sorted_Mat))),decreasing = T)
Pc <- matrix(nrow=13, ncol=464)
View(Pc)
for(i in 1:length(nCell)){
if(i==1){
a=0; b=nCell[i]; c=464-a-b
}
else{
a=sum(nCell[1:(i-1)]); b=nCell[i]; c=464-a-b
}
Pc[i,] <- c(rep(0,a), rep(1,b), rep(0,c))
}
View(Pc)
Pc <- Pc/rowSums(Pc)
View(Pc)
#########################################################################################
## Entropy (https://stackoverflow.com/questions/11226627/jensen-shannon-divergence-in-r)
H <- function(v) {
v <- v[v > 0]
return(sum(-v * log(v)))
}
JSD_ty <- function(w,m){
H((w+m)/2) - (H(w)+H(m))/2
}
## RSS
RSS <- function(R, C) {
return(1-sqrt(JSD_ty(R,C)))
}
Pr <- as.matrix(Pr)
Pc <- as.matrix(Pc)
View(Pr)
result <- matrix(nrow=215, ncol=13)
result <- matrix(nrow=215, ncol=13)
colnames(result) <- 0:12
rownames(Pr)
rownames(result) <- rownames(Pr)
for(i in 1:215){
for(j in 1:13){
m <- Pc[j,]
w <- Pr[i,]
result[i,j] <- RSS(m,w)
}
}
View(result)
write.csv(result, "RSS.txt", quote = F)
